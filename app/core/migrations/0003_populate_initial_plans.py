# Generated by Django 5.2.4 on 2025-07-26 17:31

from django.db import migrations


def populate_initial_plans(apps, schema_editor):
    """Populate initial plan data"""
    Plan = apps.get_model("core", "Plan")

    plans_data = [
        {
            "name": "trial",
            "display_name": "14-Day Trial",
            "description": "Free trial with basic features to get started",
            "price_monthly": 0.00,
            "price_yearly": 0.00,
            "max_users": 1,
            "max_integrations": 3,
            "max_monthly_notifications": 1000,
            "features": [
                "Up to 1,000 notifications",
                "Basic integrations",
                "Email support",
            ],
            "stripe_price_id_monthly": "",
            "stripe_price_id_yearly": "",
            "is_active": True,
        },
        {
            "name": "basic",
            "display_name": "Basic Plan",
            "description": "Perfect for small teams getting started with notifications",
            "price_monthly": 29.00,
            "price_yearly": 290.00,  # 2 months free
            "max_users": 5,
            "max_integrations": 10,
            "max_monthly_notifications": 10000,
            "features": [
                "Up to 10,000 events/month",
                "All integrations",
                "Email support",
                "Dashboard analytics",
            ],
            "stripe_price_id_monthly": "price_basic_monthly",
            "stripe_price_id_yearly": "price_basic_yearly",
            "is_active": True,
        },
        {
            "name": "pro",
            "display_name": "Pro Plan",
            "description": "Advanced features for growing businesses",
            "price_monthly": 99.00,
            "price_yearly": 990.00,  # 2 months free
            "max_users": 25,
            "max_integrations": 50,
            "max_monthly_notifications": 100000,
            "features": [
                "Up to 100,000 events/month",
                "All integrations",
                "Priority support",
                "Advanced analytics",
                "Custom webhooks",
            ],
            "stripe_price_id_monthly": "price_pro_monthly",
            "stripe_price_id_yearly": "price_pro_yearly",
            "is_active": True,
        },
        {
            "name": "enterprise",
            "display_name": "Enterprise Plan",
            "description": "Full-featured solution for large organizations",
            "price_monthly": 299.00,
            "price_yearly": 2990.00,  # 2 months free
            "max_users": 100,
            "max_integrations": 200,
            "max_monthly_notifications": 1000000,
            "features": [
                "1,000,000 events/month",
                "Custom integrations",
                "Dedicated support",
                "Advanced analytics",
                "SLA guarantee",
                "Priority processing",
            ],
            "stripe_price_id_monthly": "price_enterprise_monthly",
            "stripe_price_id_yearly": "price_enterprise_yearly",
            "is_active": True,
        },
    ]

    for plan_data in plans_data:
        Plan.objects.get_or_create(name=plan_data["name"], defaults=plan_data)


def reverse_populate_plans(apps, schema_editor):
    """Remove the populated plans"""
    Plan = apps.get_model("core", "Plan")
    Plan.objects.filter(name__in=["trial", "basic", "pro", "enterprise"]).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0002_alter_integration_integration_type_webauthnchallenge_and_more"),
    ]

    operations = [
        migrations.RunPython(
            populate_initial_plans,
            reverse_populate_plans,
        ),
    ]
